@model HRM_PLUS_PROJECT.Models.TipoDeduccion

@{
    ViewData["Title"] = "Editar Tipo de Deducción";
}

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="title">Editar Tipo de Deducción</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" asp-route-id="@Model.IdDeduccion" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="IdDeduccion" />
                        <div class="form-group">
                            <label asp-for="Nombre" class="control-label"></label>
                            <input asp-for="Nombre" class="form-control" />
                            <span asp-validation-for="Nombre" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Descripcion" class="control-label"></label>
                            <input asp-for="Descripcion" class="form-control" />
                            <span asp-validation-for="Descripcion" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Monto" class="control-label"></label>
                            <input asp-for="Monto" class="form-control" type="number" />
                            <span asp-validation-for="Monto" class="text-danger"></span>
                        </div>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input id="IsTodoEmpleado" class="form-check-input" asp-for="IsTodoEmpleado" /> Todos los Empleados
                            </label>
                        </div>
                        <div class="form-group">
                            <label asp-for="MinimoRango" class="control-label"></label>
                            <input asp-for="MinimoRango" class="form-control" type="number" />
                            <span asp-validation-for="MinimoRango" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="MaximoRango" class="control-label"></label>
                            <input asp-for="MaximoRango" class="form-control" type="number" />
                            <span asp-validation-for="MaximoRango" class="text-danger" style="display:block;"></span>
                            <span id="errorMaximoRango" class="text-danger" style="display:block;"></span>
                        </div>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="IsActivo" /> Activo
                            </label>
                        </div>
                        <div class="right-button">
                            <div class="form-group">
                                <input id="btnGuardar" type="submit" value="Actualizar" class="btn btn-primary" />
                                <a class="btn btn-outline-info" asp-action="Index">Volver</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
$(document).ready(function() {
  const checkbox = $("#IsTodoEmpleado");
const formGroup5 = $("input#MaximoRango").parent(".form-group");
const formGroup6 = $("input#MinimoRango").parent(".form-group");
const btnGuardar = $("#btnGuardar");

  // Oculta los elementos del formulario si el checkbox está seleccionado y limpia los campos
  if (checkbox.is(":checked")) {
    formGroup5.hide();
    formGroup6.hide();
    formGroup5.find('input, textarea, select').val('');
    formGroup6.find('input, textarea, select').val('');
  }

  // Agrega un listener al checkbox para ocultar o mostrar los elementos del formulario y limpiar los campos
  checkbox.on("change", function() {
    if($(this).is(":checked")) {
      formGroup5.hide();
      formGroup6.hide();
      formGroup5.find('input, textarea, select').val('');
      formGroup6.find('input, textarea, select').val('');
    } else {
      formGroup5.show();
      formGroup6.show();
    }
  });

  btnGuardar.on("click", function() {
  const campo5 = formGroup5.find('input, textarea, select');
  const campo6 = formGroup6.find('input, textarea, select');
  let camposObligatoriosCompletos = true;

  if(!checkbox.is(":checked")) {
    if(campo5.val() === '' || campo6.val() === '') {
      camposObligatoriosCompletos = false;
    }
  }

  if(!camposObligatoriosCompletos) {
    $('#errorMaximoRango').text('Los campos de mínimo y máximo de rango son obligatorios');
  return false;
  }

  // Agrega aquí el código para guardar el formulario si los campos requeridos están completos
  $('form').submit();
});

});
</script>


}